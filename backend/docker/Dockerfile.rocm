# Base image with ROCm support
FROM rocm/dev-ubuntu-22.04:5.7

WORKDIR /app

ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive

# Install Python 3.12, pip, ffmpeg, build-essential, curl
# build-essential might be needed if CTranslate2 (used by faster-whisper) compiles parts on install
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.12 \
    python3-pip \
    python3.12-venv \
    ffmpeg \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Make python3.12 the default python3 and pip3
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1 && \
    update-alternatives --install /usr/bin/pip3 pip3 /usr/bin/pip3 1

RUN python3 --version && pip3 --version

# Install uv
COPY --from=ghcr.io/astral-sh/uv:0.5.11 /uv /uvx /bin/

ENV PATH="/app/.venv/bin:$PATH"
ENV UV_COMPILE_BYTECODE=1
ENV UV_LINK_MODE=copy

# Copy project definition files
COPY pyproject.toml /app/pyproject.toml
COPY uv.lock* /app/

# Install dependencies using uv (excluding project)
# --system-site-packages might be important if ROCm libraries are system-wide and Python needs to see them
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-install-project

# Copy application code
COPY ./ /app/

ENV PYTHONPATH="${PYTHONPATH}:/app"

# Sync the project itself
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --locked

ENTRYPOINT ["bash", "-c"]
